// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpaceEngine;

namespace SpaceEngine.Migrations
{
    [DbContext(typeof(SpaceParkContext))]
    [Migration("20210322154801_Add_Seed_Values_Using_For_Loop")]
    partial class Add_Seed_Values_Using_For_Loop
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SpaceEngine.Parkingspot", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CharacterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxSize")
                        .HasColumnType("int");

                    b.Property<int>("MinSize")
                        .HasColumnType("int");

                    b.Property<string>("SpaceshipName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Parkingspots");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            MaxSize = 500,
                            MinSize = 0
                        },
                        new
                        {
                            ID = 2,
                            MaxSize = 500,
                            MinSize = 0
                        },
                        new
                        {
                            ID = 3,
                            MaxSize = 500,
                            MinSize = 0
                        },
                        new
                        {
                            ID = 4,
                            MaxSize = 500,
                            MinSize = 0
                        },
                        new
                        {
                            ID = 5,
                            MaxSize = 500,
                            MinSize = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
